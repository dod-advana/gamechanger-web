version: '3'
services:
    web-postgres:
        container_name: web-postgres
        build:
            context: ./postgres/
        ports:
            - "5433:5432"
        volumes:
            - postgres:/var/lib/postgresql/data
        environment:
            - POSTGRES_HOST_AUTH_METHOD=trust
        networks:
            - app-net
    redis:
        container_name: redis
        image: redis
        ports: 
           - "6379:6379"
        networks:
            - app-net
    gamechanger-web-node:
        container_name: gamechanger-web-node
        build:
            context: ./backend/
            args:
                MIGRATION_HOST: web-postgres
        restart: unless-stopped
        environment:
            - CHOKIDAR_USEPOLLING=true
        ports:
            # - "5860:5860"
            - "8990:8990"
            - "9229:9229"
        volumes:
            - ./backend/:/usr/src/app/
            - /usr/src/app/node_modules
        depends_on:
            - web-postgres
            - redis
            # - elasticsearch
        networks:
            - app-net
    gamechanger-web-react:
        container_name: gamechanger-web-react
        build:
            context: ./frontend/
        ports:
            - "8080:8080"
        restart: unless-stopped
        environment:
            - CHOKIDAR_USEPOLLING=true
        volumes:
            - ./frontend/:/usr/src/app/
            - /usr/src/app/node_modules
        depends_on:
            - gamechanger-web-node
        networks:
            - app-net

networks:
  app-net:
    name: "${COMPOSE_PROJECT_NAME:-gc-dev}-network"

volumes:
    postgres:
    mysql:
    matomo:
