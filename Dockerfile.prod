ARG BASE_IMAGE="registry.access.redhat.com/ubi8/nodejs-14:1-50"
FROM $BASE_IMAGE

# to support RHEL-based and DEBIAN-based version of node
# e.g. RHEL-based node images in ironbank, DEBIAN-based ones in docker hub
USER root
RUN yum install -y \
        git \
        make

RUN yum -y update libsolv libgcc libstdc++ cryptsetup-libs
     
# non-root app USER/GROUP
ARG APP_UID=1000
ARG APP_GID=1000

# key dirs & globally usable binaries/packages
ENV APP_ROOT="/opt/app-root"
ENV APP_DIR="${APP_ROOT}/src"
ENV APP_FRONTEND_DIR="${APP_DIR}/frontend" 
ENV APP_BACKEND_DIR="${APP_DIR}/backend" 
ENV APP_SHARED_DIR="${APP_ROOT}/shared"
ENV APP_SHARED_BIN="${APP_SHARED_DIR}/node_modules/.bin" 
ENV PATH="${APP_SHARED_BIN}:${PATH}"
ENV NPM_CONFIG_USERCONFIG="${APP_ROOT}/.nmprc"
ENV LOGS="/logs/uotapp"

RUN mkdir -p \
        "${APP_DIR}" \
        "${APP_BACKEND_DIR}" \
        "${APP_FRONTEND_DIR}" \
        "${APP_SHARED_DIR}" \
        "${LOGS}" \
    && touch "${NPM_CONFIG_USERCONFIG}" \
    && chown -R "$APP_UID:$APP_GID" "${APP_ROOT}" \
    && chown -R "$APP_UID:$APP_GID" "${LOGS}"


USER "$APP_UID:$APP_GID"
# thou shall not root

ARG NPM_PROFILE="dod-advana"
ARG NPM_REGISTRY="https://npm.pkg.github.com"
ARG NPM_AUTH_TOKEN=""

COPY --chown="$APP_UID:$APP_GID" ./frontend/package.json "${APP_FRONTEND_DIR}/package.json"
COPY --chown="$APP_UID:$APP_GID" ./backend/package.json "${APP_BACKEND_DIR}/package.json"

RUN npm set "@${NPM_PROFILE}:registry" "${NPM_REGISTRY}" \
    && ([ -n "$NPM_AUTH_TOKEN" ] && ( \
        _registry_fqdn=$(echo -n ${NPM_REGISTRY} | sed -E 's/^https?:\/\///') \
        && npm set "//${_registry_fqdn}/:_authToken" "${NPM_AUTH_TOKEN}" \
    )) \
    && (\ 
        cd "$APP_SHARED_DIR" \
        && npm install nodemon \
        && npm install sequelize-cli \
        && npm install jest \
    )\
    && (\
        cd "${APP_FRONTEND_DIR}" \
        && npm install --production \
    )\
    && (\
        cd "${APP_BACKEND_DIR}" \
        && npm install --production \
    )\
    && rm -rf "${NPM_CONFIG_USERCONFIG}"

COPY --chown="$APP_UID:$APP_GID" ./ "${APP_DIR}"

RUN (\
        cd "${APP_FRONTEND_DIR}" \
        && npm run build \
        && mv "${APP_FRONTEND_DIR}/build" "${APP_BACKEND_DIR}" \
        && cd "${APP_BACKEND_DIR}" \
        && rm -rf "${APP_FRONTEND_DIR}" \
    )

# http & https
EXPOSE 8990 8443
WORKDIR "${APP_BACKEND_DIR}"
ENTRYPOINT ["node"]
CMD ["index.js"]
