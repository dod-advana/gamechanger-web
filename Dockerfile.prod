ARG BASE_IMAGE="node:14"
FROM $BASE_IMAGE

SHELL ["/bin/bash", "-c"]

# to support RHEL-based and DEBIAN-based version of node
# e.g. RHEL-based node images in ironbank, DEBIAN-based ones in docker hub
USER root
RUN (type -P "yum" &> /dev/null) && ( \
        yum install -y \
            git \
        && yum clean all \
        && rm -rf /var/cache/yum \
     ) || ((type -P "apt-get" &> /dev/null) && ( \
        apt-get update \
        && apt-get install -y \
            git \
        && apt-get clean \
        && rm -rf /var/cache/apt/lists \
    )) || ( \
        >&2 echo "[ERROR] Unsupported Base Image" \
        && exit 1 \
    )

# non-root app USER/GROUP
ARG APP_UID=1000
ARG APP_GID=1000

USER "$APP_UID:$APP_GID"
# thou shall not root

# key dirs & globally usable binaries/packages
ENV BASE_DIR="${HOME:-/home/node}" \
    APP_DIR="${BASE_DIR}/app" \
    APP_FRONTEND_DIR="${APP_DIR}/frontend" \
    APP_BACKEND_DIR="${APP_DIR}/backend" \
    APP_SHARED_DIR="${BASE_DIR}/app-shared" \
    APP_SHARED_BIN="${APP_SHARED_DIR}/node_modules/.bin" \
    PATH="${APP_SHARED_BIN}:${PATH}" \
    NPM_CONFIG_GLOBALCONFIG="${BASE_DIR}/.npmrc"

RUN mkdir -p \
        "${BASE_DIR}" \
        "${APP_DIR}" \
        "${APP_BACKEND_DIR}" \
        "${APP_FRONTEND_DIR}" \
        "${APP_SHARED_DIR}" \
    && touch \
        "$NPM_CONFIG_GLOBALCONFIG"

ARG NPM_PROFILE="dod-advana"
ARG NPM_REGISTRY="https://npm.pkg.github.com"
ARG NPM_AUTH_TOKEN=""
RUN npm set "@${NPM_PROFILE}:registry" "${NPM_REGISTRY}" \
    && ([[ -n "$NPM_AUTH_TOKEN" ]] && npm set "//${NPM_REGISTRY}/:_authToken" "${NPM_AUTH_TOKEN}")

RUN cd "$APP_SHARED_DIR" \
    && npm install nodemon \
    && npm install sequelize-cli \
    && npm install jest

# note on copy+chown: do not use $USER var, it will - surprisingly - be root
COPY --chown="$APP_UID:$APP_GID" ./frontend/package.json "${APP_FRONTEND_DIR}/package.json"
RUN cd "${APP_FRONTEND_DIR}" \
    && npm install

COPY --chown="$APP_UID:$APP_GID" ./backend/package.json "${APP_BACKEND_DIR}/package.json"
RUN cd "${APP_BACKEND_DIR}" \
    && npm install

COPY --chown="$APP_UID:$APP_GID" . "${APP_DIR}"
RUN cd "${APP_FRONTEND_DIR}" \
    && npm run build \
    && mv build "${APP_BACKEND_DIR}"

WORKDIR "${APP_BACKEND_DIR}"
CMD ./startProd.sh
